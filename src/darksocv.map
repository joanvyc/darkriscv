
Allocating common symbols
Common symbol       size              file

io                  0x10              io.o

Memory Configuration

Name             Origin             Length             Attributes
IO               0x0000000080000000 0x0000000000000010 rw !x
MEM              0x0000000000000000 0x0000000000002000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map


.text           0x0000000000000000      0xce8
 *(.boot)
 .boot          0x0000000000000000       0x7c boot.o
                0x000000000000006c                check4rv32i
 *(.text)
 .text          0x000000000000007c       0xac io.o
                0x000000000000007c                board_name
 .text          0x0000000000000128        0x0 main.o
 .text          0x0000000000000128      0xad8 stdio.o
                0x0000000000000268                _idle
                0x0000000000000288                getchar
                0x00000000000002dc                putchar
                0x0000000000000394                gets
                0x00000000000004ac                putstr
                0x00000000000004f4                puts
                0x0000000000000540                putdx
                0x00000000000006c8                putx
                0x00000000000006d0                putd
                0x00000000000006d8                printf
                0x00000000000007fc                strncmp
                0x0000000000000848                strcmp
                0x0000000000000888                strlen
                0x00000000000008b0                memcpy
                0x00000000000008d4                memset
                0x00000000000008f4                strtok
                0x00000000000009ec                atoi
                0x0000000000000a48                xtoi
                0x0000000000000a90                mac
                0x0000000000000a98                __umulsi3
                0x0000000000000ad0                __mulsi3
                0x0000000000000b54                __udiv_umod_si3
                0x0000000000000b64                __udivsi3
                0x0000000000000b78                __umodsi3
                0x0000000000000b8c                __div_mod_si3
                0x0000000000000b9c                __divsi3
                0x0000000000000bb0                __modsi3
                0x0000000000000bc4                usleep
 .text          0x0000000000000c00       0xe8 banner.o
                0x0000000000000c00                banner
 .text          0x0000000000000ce8        0x0 boot.o

.text.startup   0x0000000000000ce8      0x60c
 .text.startup  0x0000000000000ce8      0x60c main.o
                0x0000000000000ce8                main

.rela.dyn       0x00000000000012f4        0x0
 .rela.text.startup
                0x00000000000012f4        0x0 io.o
 .rela.text     0x00000000000012f4        0x0 io.o

.data           0x00000000000012f4      0x55c
 *(.rodata*)
 .rodata.str1.4
                0x00000000000012f4       0xe0 io.o
 .rodata.str1.4
                0x00000000000013d4      0x2cf main.o
                                        0x2db (size before relaxing)
 *fill*         0x00000000000016a3        0x1 
 .rodata        0x00000000000016a4       0x40 stdio.o
 .rodata.str1.4
                0x00000000000016e4       0x19 stdio.o
 *fill*         0x00000000000016fd        0x3 
 .rodata.str1.4
                0x0000000000001700      0x110 banner.o
                                        0x10d (size before relaxing)
 .rodata        0x0000000000001810       0x31 boot.o
 *(.data)
 .data          0x0000000000001841        0x0 io.o
 .data          0x0000000000001841        0x0 main.o
 .data          0x0000000000001841        0x0 stdio.o
 .data          0x0000000000001841        0x0 banner.o
 .data          0x0000000000001841        0x0 boot.o
                0x0000000000002041                _global = (. + 0x800)
 *(.sbss)
 *fill*         0x0000000000001841        0x3 
 .sbss          0x0000000000001844        0x8 io.o
                0x0000000000001844                utimers
                0x0000000000001848                threads
 .sbss          0x000000000000184c        0x4 stdio.o
 *(.bss)
 .bss           0x0000000000001850        0x0 io.o
 .bss           0x0000000000001850        0x0 main.o
 .bss           0x0000000000001850        0x0 stdio.o
 .bss           0x0000000000001850        0x0 banner.o
 .bss           0x0000000000001850        0x0 boot.o
                0x0000000000001850                _heap = .
                0x0000000000002000                PROVIDE (_stack = (ORIGIN (MEM) + LENGTH (MEM)))

.io             0x0000000080000000       0x10
 io.o(COMMON)
 COMMON         0x0000000080000000       0x10 io.o
                0x0000000080000000                io
LOAD main.o
LOAD stdio.o
LOAD io.o
LOAD banner.o
LOAD boot.o
OUTPUT(darksocv.o elf32-littleriscv)

.comment        0x0000000000000000       0x29
 .comment       0x0000000000000000       0x29 io.o
                                         0x2a (size before relaxing)
 .comment       0x0000000000000029       0x2a main.o
 .comment       0x0000000000000029       0x2a stdio.o
 .comment       0x0000000000000029       0x2a banner.o
